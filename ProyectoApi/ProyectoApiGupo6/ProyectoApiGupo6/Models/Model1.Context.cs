//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ProyectoApiGupo6.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MordidaDivinaEntities : DbContext
    {
        public MordidaDivinaEntities()
            : base("name=MordidaDivinaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual int ActualizarCategoria(Nullable<long> id, string nombre)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarCategoria", idParameter, nombreParameter);
        }
    
        public virtual int ActualizarDireccionMantenimiento(Nullable<long> id, string provincia, string canton, string distrito, string direccionExacta)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var provinciaParameter = provincia != null ?
                new ObjectParameter("Provincia", provincia) :
                new ObjectParameter("Provincia", typeof(string));
    
            var cantonParameter = canton != null ?
                new ObjectParameter("Canton", canton) :
                new ObjectParameter("Canton", typeof(string));
    
            var distritoParameter = distrito != null ?
                new ObjectParameter("Distrito", distrito) :
                new ObjectParameter("Distrito", typeof(string));
    
            var direccionExactaParameter = direccionExacta != null ?
                new ObjectParameter("DireccionExacta", direccionExacta) :
                new ObjectParameter("DireccionExacta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarDireccionMantenimiento", idParameter, provinciaParameter, cantonParameter, distritoParameter, direccionExactaParameter);
        }
    
        public virtual int ActualizarImagenProducto(Nullable<long> productoId, string rutaImagen)
        {
            var productoIdParameter = productoId.HasValue ?
                new ObjectParameter("ProductoId", productoId) :
                new ObjectParameter("ProductoId", typeof(long));
    
            var rutaImagenParameter = rutaImagen != null ?
                new ObjectParameter("RutaImagen", rutaImagen) :
                new ObjectParameter("RutaImagen", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarImagenProducto", productoIdParameter, rutaImagenParameter);
        }
    
        public virtual int ActualizarProducto(Nullable<long> productoId, Nullable<long> categoriaId, string nombreProducto, string descripcion, Nullable<decimal> precio)
        {
            var productoIdParameter = productoId.HasValue ?
                new ObjectParameter("ProductoId", productoId) :
                new ObjectParameter("ProductoId", typeof(long));
    
            var categoriaIdParameter = categoriaId.HasValue ?
                new ObjectParameter("CategoriaId", categoriaId) :
                new ObjectParameter("CategoriaId", typeof(long));
    
            var nombreProductoParameter = nombreProducto != null ?
                new ObjectParameter("NombreProducto", nombreProducto) :
                new ObjectParameter("NombreProducto", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarProducto", productoIdParameter, categoriaIdParameter, nombreProductoParameter, descripcionParameter, precioParameter);
        }
    
        public virtual int ActualizarUsuarioMantenimiento(Nullable<long> id, Nullable<long> rolId, string nombre, string apellidos, string email, Nullable<bool> activo, Nullable<bool> temporal, Nullable<System.DateTime> vencimiento)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("Id", id) :
                new ObjectParameter("Id", typeof(long));
    
            var rolIdParameter = rolId.HasValue ?
                new ObjectParameter("rolId", rolId) :
                new ObjectParameter("rolId", typeof(long));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidosParameter = apellidos != null ?
                new ObjectParameter("Apellidos", apellidos) :
                new ObjectParameter("Apellidos", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            var temporalParameter = temporal.HasValue ?
                new ObjectParameter("Temporal", temporal) :
                new ObjectParameter("Temporal", typeof(bool));
    
            var vencimientoParameter = vencimiento.HasValue ?
                new ObjectParameter("Vencimiento", vencimiento) :
                new ObjectParameter("Vencimiento", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ActualizarUsuarioMantenimiento", idParameter, rolIdParameter, nombreParameter, apellidosParameter, emailParameter, activoParameter, temporalParameter, vencimientoParameter);
        }
    
        public virtual ObjectResult<ConsultarCategoria_Result> ConsultarCategoria(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarCategoria_Result>("ConsultarCategoria", idParameter);
        }
    
        public virtual ObjectResult<ConsultarProducto_Result> ConsultarProducto(Nullable<long> productoId)
        {
            var productoIdParameter = productoId.HasValue ?
                new ObjectParameter("ProductoId", productoId) :
                new ObjectParameter("ProductoId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarProducto_Result>("ConsultarProducto", productoIdParameter);
        }
    
        public virtual ObjectResult<ConsultarProductos_Result> ConsultarProductos()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarProductos_Result>("ConsultarProductos");
        }
    
        public virtual ObjectResult<ConsultarTiposCategoria_Result> ConsultarTiposCategoria()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarTiposCategoria_Result>("ConsultarTiposCategoria");
        }
    
        public virtual ObjectResult<ConsultarTiposRoles_Result> ConsultarTiposRoles()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarTiposRoles_Result>("ConsultarTiposRoles");
        }
    
        public virtual ObjectResult<ConsultarUsuario_Result> ConsultarUsuario(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarUsuario_Result>("ConsultarUsuario", idParameter);
        }
    
        public virtual ObjectResult<ConsultarUsuarioMantenimiento_Result> ConsultarUsuarioMantenimiento(Nullable<long> usuarioId)
        {
            var usuarioIdParameter = usuarioId.HasValue ?
                new ObjectParameter("UsuarioId", usuarioId) :
                new ObjectParameter("UsuarioId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarUsuarioMantenimiento_Result>("ConsultarUsuarioMantenimiento", usuarioIdParameter);
        }
    
        public virtual ObjectResult<ConsultarUsuarios_Result> ConsultarUsuarios()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ConsultarUsuarios_Result>("ConsultarUsuarios");
        }
    
        public virtual int EliminarCategoria(Nullable<long> categoriaId)
        {
            var categoriaIdParameter = categoriaId.HasValue ?
                new ObjectParameter("CategoriaId", categoriaId) :
                new ObjectParameter("CategoriaId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarCategoria", categoriaIdParameter);
        }
    
        public virtual int EliminarProducto(Nullable<long> productoId)
        {
            var productoIdParameter = productoId.HasValue ?
                new ObjectParameter("ProductoId", productoId) :
                new ObjectParameter("ProductoId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarProducto", productoIdParameter);
        }
    
        public virtual int EliminarUsuarioMantenimiento(Nullable<long> usuarioId)
        {
            var usuarioIdParameter = usuarioId.HasValue ?
                new ObjectParameter("UsuarioId", usuarioId) :
                new ObjectParameter("UsuarioId", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("EliminarUsuarioMantenimiento", usuarioIdParameter);
        }
    
        public virtual ObjectResult<EncontrarPorCorreo_Result> EncontrarPorCorreo(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EncontrarPorCorreo_Result>("EncontrarPorCorreo", emailParameter);
        }
    
        public virtual ObjectResult<EnvioCodigoAcceso_Result> EnvioCodigoAcceso(string email)
        {
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EnvioCodigoAcceso_Result>("EnvioCodigoAcceso", emailParameter);
        }
    
        public virtual ObjectResult<IniciarSesionUsuario_Result> IniciarSesionUsuario(string email, string contrasenna)
        {
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var contrasennaParameter = contrasenna != null ?
                new ObjectParameter("Contrasenna", contrasenna) :
                new ObjectParameter("Contrasenna", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<IniciarSesionUsuario_Result>("IniciarSesionUsuario", emailParameter, contrasennaParameter);
        }
    
        public virtual int ModificarUsuario(Nullable<long> id, string contrasenna, string nombre, string apellidos, string email)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            var contrasennaParameter = contrasenna != null ?
                new ObjectParameter("contrasenna", contrasenna) :
                new ObjectParameter("contrasenna", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("nombre", nombre) :
                new ObjectParameter("nombre", typeof(string));
    
            var apellidosParameter = apellidos != null ?
                new ObjectParameter("apellidos", apellidos) :
                new ObjectParameter("apellidos", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("email", email) :
                new ObjectParameter("email", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ModificarUsuario", idParameter, contrasennaParameter, nombreParameter, apellidosParameter, emailParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> RegistrarCategoria(string nombreCategoria)
        {
            var nombreCategoriaParameter = nombreCategoria != null ?
                new ObjectParameter("NombreCategoria", nombreCategoria) :
                new ObjectParameter("NombreCategoria", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("RegistrarCategoria", nombreCategoriaParameter);
        }
    
        public virtual int RegistrarDireccion(Nullable<long> usuarioId, string provincia, string canton, string distrito, string direccionExacta)
        {
            var usuarioIdParameter = usuarioId.HasValue ?
                new ObjectParameter("UsuarioId", usuarioId) :
                new ObjectParameter("UsuarioId", typeof(long));
    
            var provinciaParameter = provincia != null ?
                new ObjectParameter("Provincia", provincia) :
                new ObjectParameter("Provincia", typeof(string));
    
            var cantonParameter = canton != null ?
                new ObjectParameter("Canton", canton) :
                new ObjectParameter("Canton", typeof(string));
    
            var distritoParameter = distrito != null ?
                new ObjectParameter("Distrito", distrito) :
                new ObjectParameter("Distrito", typeof(string));
    
            var direccionExactaParameter = direccionExacta != null ?
                new ObjectParameter("DireccionExacta", direccionExacta) :
                new ObjectParameter("DireccionExacta", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegistrarDireccion", usuarioIdParameter, provinciaParameter, cantonParameter, distritoParameter, direccionExactaParameter);
        }
    
        public virtual ObjectResult<RegistrarNuevaContrasenna_Result> RegistrarNuevaContrasenna(string codigoAcceso, string nuevaContrasenna, string confirmacionContrasenna)
        {
            var codigoAccesoParameter = codigoAcceso != null ?
                new ObjectParameter("CodigoAcceso", codigoAcceso) :
                new ObjectParameter("CodigoAcceso", typeof(string));
    
            var nuevaContrasennaParameter = nuevaContrasenna != null ?
                new ObjectParameter("NuevaContrasenna", nuevaContrasenna) :
                new ObjectParameter("NuevaContrasenna", typeof(string));
    
            var confirmacionContrasennaParameter = confirmacionContrasenna != null ?
                new ObjectParameter("ConfirmacionContrasenna", confirmacionContrasenna) :
                new ObjectParameter("ConfirmacionContrasenna", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RegistrarNuevaContrasenna_Result>("RegistrarNuevaContrasenna", codigoAccesoParameter, nuevaContrasennaParameter, confirmacionContrasennaParameter);
        }
    
        public virtual ObjectResult<Nullable<long>> RegistrarProducto(Nullable<long> categoriaId, string nombreProducto, string descripcion, Nullable<decimal> precio)
        {
            var categoriaIdParameter = categoriaId.HasValue ?
                new ObjectParameter("CategoriaId", categoriaId) :
                new ObjectParameter("CategoriaId", typeof(long));
    
            var nombreProductoParameter = nombreProducto != null ?
                new ObjectParameter("NombreProducto", nombreProducto) :
                new ObjectParameter("NombreProducto", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var precioParameter = precio.HasValue ?
                new ObjectParameter("Precio", precio) :
                new ObjectParameter("Precio", typeof(decimal));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<long>>("RegistrarProducto", categoriaIdParameter, nombreProductoParameter, descripcionParameter, precioParameter);
        }
    
        public virtual int RegistrarUsuario(string nombre, string apellidos, string email, string contrasenna)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidosParameter = apellidos != null ?
                new ObjectParameter("Apellidos", apellidos) :
                new ObjectParameter("Apellidos", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var contrasennaParameter = contrasenna != null ?
                new ObjectParameter("Contrasenna", contrasenna) :
                new ObjectParameter("Contrasenna", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RegistrarUsuario", nombreParameter, apellidosParameter, emailParameter, contrasennaParameter);
        }
    }
}
